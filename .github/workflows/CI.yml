name: Build BeamIO + Deploy examples

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build_and_tests:
    name: Build + Run tests + Push to main

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install BeamIO dependencies
        run: yarn install --frozen-lockfile

      - name: Build BeamIO
        run: yarn build
      - name: Build 'web-client' example
        run: cd examples/web-client && yarn build

      - name: Run BeamIO tests
        run: yarn test

      - name: Config bot
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit built BeamIO
        run: git add ./dist -A && git commit -m "AutoBuild BeamIO" -a  || echo "No changes"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  deploy_server:
    name: Deploy 'server' example to Iridium cloud
    runs-on: ubuntu-latest
    needs: [build_and_tests]
    if: github.event_name != 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    # working-directory: ./examples/server
    steps:
      - uses: actions/checkout@v2
      - name: Set up SSH
        working-directory: ./examples/server
        run: |
          mkdir -p ~/.ssh/
          echo "$DEPLOY_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          echo "$DEPLOY_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          DEPLOY_PRIVATE_KEY: ${{secrets.DEPLOY_PRIVATE_KEY}}
          DEPLOY_KNOWN_HOSTS: ${{secrets.DEPLOY_KNOWN_HOSTS}}

      - name: Create env file
        working-directory: ./examples/server
        run: |
          touch .env
          echo DEPLOY_SERVER_HOST=${{ secrets.DEPLOY_SERVER_HOST }} >> .env
          echo DEPLOY_SERVER_PORT=${{ secrets.DEPLOY_SERVER_PORT }} >> .env
          echo DEPLOY_SERVER_USER=${{ secrets.DEPLOY_SERVER_USER }} >> .env
          echo DEPLOY_SERVER_PATH=${{ secrets.DEPLOY_SERVER_PATH }} >> .env

      - name: Install PM2
        working-directory: ./examples/server
        run: yarn global add pm2

      - name: Deploy
        working-directory: ./examples/server
        run: env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ecosystem.config.js production

  publish_webclient:
    name: Publish 'web-client' example
    needs: [build_and_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: cd examples/BeamSchemes && yarn
      - run: cd examples/web-client && yarn && yarn build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: github.event_name != 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
        with:
          entryPoint: examples/web-client/
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_IRIDIUM_BLAST }}'
          channelId: live
          projectId: iridium-blast

      - name: Deploy to Firebase Hosting (preview mode)
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        with:
          entryPoint: examples/web-client/
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_IRIDIUM_BLAST }}'
          channelId: live
          projectId: iridium-blast
